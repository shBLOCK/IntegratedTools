buildscript {
    repositories {
        jcenter()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = "https://plugins.gradle.org/m2/" }
        //mavenCentral()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: "java"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

repositories {
    maven {
        name = "Cyclops Repo"
        url = "https://oss.jfrog.org/artifactory/simple/libs-release/"
    }
    maven { // Baubles
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
    maven {
        //url = "https://repo.spongepowered.org/repository/maven-public"
        url = "https://repo.spongepowered.org/maven"
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile "org.cyclops.integratedterminals:IntegratedTerminals:${mc_version}-${integratedterminals_version}:deobf"
    compile "org.cyclops.integratedtunnels:IntegratedTunnels:${mc_version}-${integratedtunnels_version}:deobf"
    compile "org.cyclops.integratedcrafting:IntegratedCrafting:${mc_version}-${integratedcrafting_version}:deobf"

    compile "org.cyclops.cyclopscore:CyclopsCore:${mc_version}-${cyclopscore_version}:deobf"

    compile("org.cyclops.integrateddynamicscompat:IntegratedDynamicsCompat:${integrateddynamicscompat_version}:deobf") {
        exclude group: 'org.cyclops.cyclopscore', module: 'CyclopsCore'
        exclude group: 'org.cyclops.integrateddynamics', module: 'IntegratedDynamics'
    }

    compile("org.cyclops.integrateddynamics:IntegratedDynamics:${mc_version}-${integrateddynamics_version}:deobf") {
        exclude group: 'org.cyclops.cyclopscore', module: 'CyclopsCore'
    }

    compile("org.cyclops.commoncapabilities:CommonCapabilities:${mc_version}-${commoncapabilities_version}:deobf") {
        exclude group: 'org.cyclops.cyclopscore', module: 'CyclopsCore'
    }
}

version = '1.0.8'
group = 'com.shblock.integrated_proxy' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'integrated_proxy-1.12'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: '20180814-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

sourceSets {
    main {
        output.resourcesDir = output.classesDir
        ext.refMap = "mixins.integrated_proxy.refmap.json"
    }
}
//当需要reobf jar包时重新设置资源文件夹
gradle.taskGraph.whenReady{
    taskGraph ->
        if(taskGraph.hasTask(":reobfJar")){
            clearSourcesDir
            sourceSets.main.output.resourcesDir(new File("build/resources"))
        }
}

task clearSourcesDir {
    delete(sourceSets.main.output.classesDir)
}